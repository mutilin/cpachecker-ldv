# ------------------------------------------------------------------
# This configuration file uses explicit analysis
# in a model-checking configuration.
# Errors found are verified by CBMC.
#
# This configuration uses a CEGAR approach, by only tracking
# "important" variables. The analysis is backed by a PredicateCPA
# in the ABE-L configuration.
# ------------------------------------------------------------------

cpa                     = cpa.arg.ARGCPA
ARGCPA.cpa              = cpa.functionpointer.FunctionPointerCPA
FunctionPointerCPA.cpa  = cpa.composite.CompositeCPA
CompositeCPA.cpas       = cpa.location.LocationCPA,cpa.callstack.CallstackCPA,cpa.explicit.ExplicitCPA,cpa.predicate.PredicateCPA,cpa.conditions.global.GlobalConditionsCPA,cpa.conditions.path.PathConditionsCPA

# this automaton defines which locations are the error locations
specification = config/specification/sv-comp.spc

analysis.traversal.order               = bfs
analysis.traversal.useReversePostorder = true
analysis.traversal.useCallstack        = true

analysis.useCBMC                       = true

analysis.useRefinement                 = true
cegar.refiner                          = cpa.explicit.refiner.DelegatingExplicitRefiner

# add variables to precision in whole scope of respective variable, not only at specific location
cpa.explicit.precision.refinement.useScopedInterpolation = true

cpa.composite.precAdjust                                 = OMNISCIENT

cpa.conditions.path.condition                            = AssignmentsInPathCondition
cpa.explicit.precision.path.defaultThreshold             = 22


cpa.predicate.blk.alwaysAtFunctions = true
cpa.predicate.blk.alwaysAtLoops     = true

cpa.conditions.global.time.wall = 15min


output.disable         = true
statistics.memory      = false
cpa.arg.errorPath.file = ErrorPath.txt 
