# ------------------------------------------------------------------
# This configuration file uses explicit analysis of integer
# variables in a model-checking configuration.
# CBMC is used to cross-check counterexamples.
# This configuration makes use of a CEGAR approach, by only tracking
# variables that are found, via interpolation, to be relevant to the
# error.
# To counter the imprecision of the explicit domain, a predicate
# analysis in the ABE-lf configuration is used to increase the
# precision.
# Furthemore, variables that have more then 22 distinct values along
# a path are dropped in the subsequent path exploration.
# ------------------------------------------------------------------

#include ../../config/explicitAnalysis-ItpRefiner-ABElf.properties

cpa = cpa.abm.ABMCPA
ABMCPA.cpa = cpa.arg.ARGCPA
ARGCPA.cpa =  cpa.cover.CoverCPA
CoverCPA.cpa = cpa.composite.CompositeCPA
CompositeCPA.cpas       = cpa.location.LocationCPA,cpa.callstack.CallstackCPA,cpa.explicit.ExplicitCPA,cpa.functionpointer.FunctionPointerCPA,cpa.predicate.ABMPredicateCPA,cpa.conditions.global.GlobalConditionsCPA

# this automaton defines which locations are the error locations
specification = config/specification/sv-comp.spc

# drop variables from abstract state once they have more then 22 distinct assignments along the current path
cpa.conditions.path.condition                 = AssignmentsInPathCondition
cpa.explicit.precision.path.defaultThreshold  = 22

output.disable         = false 
statistics.memory      = false
cpa.arg.errorPath.file = ErrorPath.txt

# Set 64-bit machine model
analysis.machineModel = Linux64

# Disable counterexample double-check with CBMC
analysis.useCBMC = false

# Turn on Immutable CFA 3
analysis.completeEdges = true
analysis.functionPointerCalls = true
analysis.summaryEdges = true
analysis.createUndefinedFunctionCall = true
cpa.functionpointer.immutableCFA = true
cpa.callstack.skipRecursion = true

# Set several custom (LDV-specific) nondet functions
cpa.predicate.nondetFunctions = nondet_int,malloc,__kmalloc,kzalloc,sscanf,random

