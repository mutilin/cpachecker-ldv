# ARGCPA is needed for counterexample analysis
cpa                     = cpa.arg.ARGCPA
ARGCPA.cpa              = cpa.composite.CompositeCPA
CompositeCPA.cpas       = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.cpalien.CPAlienCPA, cpa.functionpointer.FunctionPointerCPA

log.level = ALL

specification = specification/cpalien-label-only.spc
cpa.cpalien.exportSMGwhen = interesting
cpa.cpalien.memoryErrors = false
cpa.cpalien.enableMallocFail = false
cpa.cpalien.unknownOnUndefined = true
cpa.cpalien.handleUnknownFunctions = strict

analysis.traversal.order                  = bfs
analysis.traversal.useReversePostorder    = false
analysis.traversal.useCallstack           = false

analysis.summaryEdges       = true
cpa.callstack.skipRecursion = true

cfa.simplifyConstExpressions = true

# Write counterexample to file (required by competition).
cpa.arg.errorPath.file = ErrorPath.txt

# Disable statistics for memory consumption.
statistics.memory = false
