Starting analysis... (CPAchecker.runAlgorithm, INFO)

Line 33: Assuming external function to be a pure function: __assert_fail (CtoFormulaConverter.makeExternalFunctionCall, INFO)

Line 40: Assuming external function to be a pure function: int_nondet (CtoFormulaConverter.makeExternalFunctionCall, INFO)

Line 69: Ignoring the semantics of pointer for parameter new: list_add(struct list_head *new , struct list_head *head ) (CtoFormulaConverter.makeFunctionCall, WARNING)

Line 69: Ignoring the semantics of pointer for parameter head: list_add(struct list_head *new , struct list_head *head ) (CtoFormulaConverter.makeFunctionCall, WARNING)

Line 139: Unhandled expression treated as free variable: & head (CtoFormulaConverter.warnUnsafeVar, WARNING)

Line 79: Assuming external function to be a pure function: __assert_fail (CtoFormulaConverter.makeExternalFunctionCall, INFO)

Line 84: Assuming external function to be a pure function: int_nondet (CtoFormulaConverter.makeExternalFunctionCall, INFO)

Line 141: Unhandled expression treated as free variable: & head (CtoFormulaConverter.warnUnsafeVar, WARNING)

Line 98: Ignoring the semantics of pointer for parameter entry: list_del(struct list_head *entry ) (CtoFormulaConverter.makeFunctionCall, WARNING)

Line 145: Unhandled expression treated as free variable: & head (CtoFormulaConverter.warnUnsafeVar, WARNING)

Line 147: Unhandled expression treated as free variable: & head (CtoFormulaConverter.warnUnsafeVar, WARNING)

terminate called after throwing an instance of 'std::bad_alloc'
  what():  std::bad_alloc
scripts/cpa.sh: Zeile 69: 24586 Abgebrochen             $JAVA $JAVA_VM_ARGUMENTS -Djava.library.path=$arch_platform_path -Xmx1200m -ea org.sosy_lab.cpachecker.cmdline.CPAMain "$@"
