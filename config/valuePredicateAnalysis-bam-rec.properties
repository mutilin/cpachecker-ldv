# ----------------------------------------------------------------------
# This configuration file uses a combination of block abstraction memoisation,
# predicate-analysis, and value analysis to verify recursive procedures.
# ----------------------------------------------------------------------

#include predicateAnalysis-bam-rec-plain.properties
#include valueAnalysis-bam-rec.properties


# setup for parallel execution of value analysis and predicate analysis with common refiner
cegar.refiner = cpa.value.refiner.ValueAnalysisDelegatingBAMRefiner
cpa = cpa.bam.BAMCPA
BAMCPA.cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA
CompositeCPA.cpas = cpa.location.LocationCPA,cpa.callstack.CallstackCPA,cpa.value.ValueAnalysisCPA, cpa.predicate.BAMPredicateCPA


# the rest below is just copied from included files.
# it is not needed, if included files are unchanged.

analysis.traversal.order = bfs
analysis.traversal.useReversePostorder = true
analysis.traversal.useCallstack = true

# with refinement, we can _not_ use aggressive caching,
# because the precision is very important here.
# we also refine all precision along the error-path.
cpa.bam.aggressiveCaching=false
cpa.bam.doPrecisionRefinementForAllStates=true

# enable support for recursion
cpa.bam.handleRecursiveProcedures=true
cpa.callstack.depth=1

