For benchmarking, it is recommended to use scripts/benchmark.py.
This script should run with any Python version >= 2.7.
This script takes as input one or more XML files which specifiy the tool,
the resource limits, the tool configuration, the input programs
and the columns that should appear in the output table.
The scripts puts all the results into the test/results/ directory.
Commented examples for these XML files are given in
doc/examples/benchmark*.xml. Several useful benchmark configurations
are in test/test-sets/*.xml.

In order to combine the results from several benchmark runs into
a single table the script scripts/table-generator.xml can be used.
It also takes an XML file as input that gives the table configuration.
An example for such a file is docs/examples/table-generator.xml.
The output will be tables in HTML and CSV format,
the former having some additional features like showing the log files
and being able to plot the results.

There are several CPAchecker options that are especially useful for benchmarks:

- output.disable=true
  This option disables all output files that would otherwise be
  generated by CPAchecker.
  This is also available as command-line argument -noout.

- statistics.memory=false
  This option disables the additional thread that is tracking
  the memory usage over time.

It is also recommended to disable assertion checking for benchmarks.
This can be done by adding the command-line argument -disable-java-assertions.

For further help on the benchmark script use 'scripts/benchmark.py -h'.
