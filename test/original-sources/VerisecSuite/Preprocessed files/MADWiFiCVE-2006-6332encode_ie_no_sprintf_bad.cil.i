# 1 "../VeriSec/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.cil.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "../VeriSec/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.cil.c"
# 14 "../versisec/MadWiFi/progs/../lib/stubs.h"
typedef int size_t;
# 3 "../versisec/MadWiFi/progs/../constants.h"
typedef unsigned int u_int;
# 4 "../versisec/MadWiFi/progs/../constants.h"
typedef unsigned char u_int8_t;
# 32 "../versisec/MadWiFi/progs/../lib/stubs.h"
extern void *memcpy(void *dest , void const *src , size_t n ) ;
# 71 "/usr/include/assert.h"
extern __attribute__((__nothrow__, __noreturn__)) void __assert_fail(char const *__assertion ,
                                                                      char const *__file ,
                                                                      unsigned int __line ,
                                                                      char const *__function ) ;
# 4 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
static u_int encode_ie(void *buf , size_t bufsize , u_int8_t const *ie , size_t ielen ,
                       char const *leader , size_t leader_len )
{ void *bufend ;
  u_int8_t *p ;
  int i ;
  int tmp ;
  void *__cil_tmp11 ;
  void const *__cil_tmp12 ;
  unsigned long __cil_tmp13 ;
  unsigned long __cil_tmp14 ;
  unsigned long __cil_tmp15 ;
  u_int8_t *__cil_tmp16 ;
  unsigned long __cil_tmp17 ;
  u_int8_t *__cil_tmp18 ;
  u_int8_t *__cil_tmp19 ;

  {
# 9 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  bufend = buf + bufsize;
# 16 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  if (bufsize < leader_len) {
# 17 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    return (0U);
  } else {

  }
  {
# 18 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  p = (u_int8_t *)buf;
# 19 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp11 = (void *)p;
# 19 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp12 = (void const *)leader;
# 19 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  memcpy(__cil_tmp11, __cil_tmp12, leader_len);
# 20 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  bufsize = bufsize - leader_len;
# 21 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  p = p + leader_len;
# 23 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  i = 0;
  }
  {
# 23 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  while (1) {
    while_0_continue: ;
# 23 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    if (i < ielen) {
# 23 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
      if (bufsize > 2) {

      } else {
        goto while_0_break;
      }
    } else {
      goto while_0_break;
    }
    {
# 33 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    __cil_tmp13 = (unsigned long )bufend;
# 33 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    __cil_tmp14 = (unsigned long )p;
# 33 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    if (__cil_tmp14 < __cil_tmp13) {

    } else {
      {
# 33 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
      __assert_fail("p < bufend", "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c",
                    33U, "encode_ie");
      }
    }
    }
# 34 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    *p = (unsigned char )'x';
    {
# 36 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    __cil_tmp15 = (unsigned long )bufend;
# 36 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    __cil_tmp16 = p + 1;
# 36 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    __cil_tmp17 = (unsigned long )__cil_tmp16;
# 36 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    if (__cil_tmp17 < __cil_tmp15) {

    } else {
      {
# 36 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
      __assert_fail("p+1 < bufend", "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c",
                    36U, "encode_ie");
      }
    }
    }
# 37 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    __cil_tmp18 = p + 1;
# 37 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    *__cil_tmp18 = (unsigned char )'x';
# 38 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    p = p + 2;
# 23 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    i = i + 1;
  }
  while_0_break: ;
  }
# 43 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  if (i == ielen) {
# 43 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    __cil_tmp19 = (u_int8_t *)buf;
# 43 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    tmp = p - __cil_tmp19;
  } else {
# 43 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
    tmp = 0;
  }
# 43 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  return ((unsigned int )tmp);
}
}
# 46 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
int main(void)
{ u_int8_t buf[6] ;
  u_int8_t ie[5] ;
  char leader[1] ;
  unsigned long __cil_tmp4 ;
  unsigned long __cil_tmp5 ;
  u_int8_t *__cil_tmp6 ;
  void *__cil_tmp7 ;
  unsigned long __cil_tmp8 ;
  unsigned long __cil_tmp9 ;
  u_int8_t *__cil_tmp10 ;
  u_int8_t const *__cil_tmp11 ;
  unsigned long __cil_tmp12 ;
  unsigned long __cil_tmp13 ;
  char *__cil_tmp14 ;
  char const *__cil_tmp15 ;

  {
  {
# 52 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp4 = 0 * 1UL;
# 52 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp5 = (unsigned long )(buf) + __cil_tmp4;
# 52 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp6 = (u_int8_t *)__cil_tmp5;
# 52 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp7 = (void *)__cil_tmp6;
# 52 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp8 = 0 * 1UL;
# 52 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp9 = (unsigned long )(ie) + __cil_tmp8;
# 52 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp10 = (u_int8_t *)__cil_tmp9;
# 52 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp11 = (u_int8_t const *)__cil_tmp10;
# 52 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp12 = 0 * 1UL;
# 52 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp13 = (unsigned long )(leader) + __cil_tmp12;
# 52 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp14 = (char *)__cil_tmp13;
# 52 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  __cil_tmp15 = (char const *)__cil_tmp14;
# 52 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  encode_ie(__cil_tmp7, 6, __cil_tmp11, 5, __cil_tmp15, 1);
  }
# 56 "../versisec/MadWiFi/progs/MADWiFiCVE-2006-6332encode_ie_no_sprintf_bad.c"
  return (0);
}
}
