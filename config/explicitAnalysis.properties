# ------------------------------------------------------------------
# This configuration file uses explicit analysis of local integer
# variables in a model-checking configuration.
# Found errors are cross-checked by CBMC.
# ------------------------------------------------------------------

# only paths to possible error locations are analyzed
# This does currently not work if function pointers exist.
#cfa.removeIrrelevantForErrorLocations = true

analysis.useCBMC = true
counterexample.continueAfterInfeasibleError = true

# ARTCPA is needed for counterexample analysis
cpa = cpa.art.ARTCPA

# FunctionPointerCPA provides handling of function pointers
ARTCPA.cpa = cpa.functionpointer.FunctionPointerCPA

FunctionPointerCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.explicit.ExplicitCPA

cpa.explicit.threshold = 200000

# this automaton defines which locations are the error locations
specification = config/specification/ErrorLocation.spc
