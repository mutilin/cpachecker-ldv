cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.policyiteration.PolicyCPA
cpa.predicate.solver = Z3

# Might need to experiment with the option below.
cpa.predicate.ignoreIrrelevantVariables = false
cpa.predicate.solver.useLogger = false

specification = specification/default.spc

# parser.usePreprocessor = true
# reachedSet.export  = true

cpa.stator.policy.generateUpperBound = true
cpa.stator.policy.generateLowerBound = true

cpa.stator.policy.generateOctagons = true

cfa.findLiveVariables = true

# TODO: what is the good counter-example checker?..
analysis.checkCounterexamples = true
counterexample.checker = CPACHECKER
counterexample.checker.config = cex-checks/predicateAnalysis-as-bitprecise-cex-check.properties

# analysis.analysisIsIncomplete