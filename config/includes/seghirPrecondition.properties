#include predicateAnalysisBackward.properties

CompositeCPA.cpas = cpa.partitioning.PartitioningCPA, cpa.location.LocationCPABackwards, cpa.callstack.CallstackCPABackwards, cpa.functionpointer.FunctionPointerCPA, cpa.predicate.PredicateCPA

analysis.refinePreconditions=true
analysis.algorithm.CEGAR=False

analysis.stopAfterError=False
cpa.predicate.synthesizePrecisionOnAbstraction=False
cpa.predicate.precision.sharing=FUNCTION

cpa.predicate.handlePointerAliasing=False
cpa.predicate.handleArrays=True

cpa.predicate.solver=Z3

cpa.predicate.blk.alwaysAtFunctionHeads=False
cpa.predicate.blk.alwaysAtEntryFunctionHead=True
cpa.predicate.blk.alwaysAtLoops=True

# SAT check of block formulas. This might have big influence on the
# performance. Benchmark it in detail!!
cpa.predicate.satCheck=1

cpa.predicate.abstraction.simplify=False

# Export of the WP
cpa.predicate.precondition.export=True
cpa.predicate.precondition.file=precondition.txt

cpa.predicate.abstraction.computation=BOOLEAN

