/*
 *  CPAchecker is a tool for configurable software verification.
 *  This file is part of CPAchecker.
 *
 *  Copyright (C) 2007-2011  Dirk Beyer
 *  All rights reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *
 *  CPAchecker web page:
 *    http://cpachecker.sosy-lab.org
 */

//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// [date omitted]
//----------------------------------------------------

package org.sosy_lab.cpachecker.fshell.fql2.parser;

/** CUP generated interface containing symbol constants. */
public interface FQLSym {
  /* terminals */
  public static final int TOK_ALTERNATIVE = 41;
  public static final int TOK_LINE = 7;
  public static final int TOK_NEQ = 36;
  public static final int TOK_CALLS = 13;
  public static final int TOK_SETMINUS = 26;
  public static final int TOK_LABEL = 11;
  public static final int TOK_LESS_OR_EQ = 34;
  public static final int TOK_CONDITIONGRAPH = 21;
  public static final int TOK_EQ = 33;
  public static final int TOK_EDGECOV = 38;
  public static final int TOK_R_BRACE = 30;
  public static final int TOK_L_BRACE = 29;
  public static final int TOK_FUNC = 10;
  public static final int TOK_FILE = 6;
  public static final int TOK_COMPOSE = 28;
  public static final int TOK_KLEENE = 42;
  public static final int TOK_REGEXP = 17;
  public static final int TOK_C_IDENT = 47;
  public static final int TOK_CONCAT = 40;
  public static final int TOK_PATHCOV = 39;
  public static final int TOK_L_PARENTHESIS = 2;
  public static final int TOK_ENCLOSING_SCOPES = 27;
  public static final int EOF = 0;
  public static final int error = 1;
  public static final int TOK_COMMA = 4;
  public static final int TOK_COLUMN = 9;
  public static final int TOK_R_PARENTHESIS = 3;
  public static final int TOK_QUOTE = 43;
  public static final int TOK_QUOTED_STRING = 48;
  public static final int TOK_EXPR = 16;
  public static final int TOK_IDENTITY = 5;
  public static final int TOK_LINE_ABBREV = 8;
  public static final int TOK_GREATER = 32;
  public static final int TOK_NODECOV = 37;
  public static final int TOK_LESS = 35;
  public static final int TOK_DECISIONEDGE = 20;
  public static final int TOK_NAT_NUMBER = 49;
  public static final int TOK_PREDICATION = 22;
  public static final int TOK_INTERSECT = 25;
  public static final int TOK_CALL = 12;
  public static final int TOK_CONDITIONEDGE = 19;
  public static final int TOK_BASICBLOCKENTRY = 18;
  public static final int TOK_IN = 44;
  public static final int TOK_UNION = 24;
  public static final int TOK_ENTRY = 14;
  public static final int TOK_EXIT = 15;
  public static final int TOK_PASSING = 46;
  public static final int TOK_COVER = 45;
  public static final int TOK_COMPLEMENT = 23;
  public static final int TOK_GREATER_OR_EQ = 31;
}

