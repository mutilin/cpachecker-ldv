# ----------------------------------------------------------------------
# This configuration file uses a combination of explicit-value analysis
# and symbolic memory graphs to verify memory safety properties.
# ----------------------------------------------------------------------

#include includes/explicitAnalysis.properties

# specification to find memory related problems
specification = specification/cpalien-leaks.spc, specification/TerminatingFunctions.spc

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.explicit2.ExplicitCPA, cpa.cpalien2.CPAlienCPA

# checking conterexamples, esp. with CBMC does not make sense
analysis.useCBMC = false

analysis.traversal.order                  = bfs
analysis.traversal.useReversePostorder    = false
analysis.traversal.useCallstack           = false

cpa.cpalien.enableMallocFail       = false
cpa.cpalien.handleUnknownFunctions = assume_safe

# cfa.useMultiEdges = true
cfa.simplifyConstExpressions = true

# Disable all output files except the error path.
output.disable = true

# Write counterexample to file (required by competition).
cpa.arg.errorPath.file = ErrorPath.txt

# Disable statistics for memory consumption.
statistics.memory = false
