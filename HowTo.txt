CPAchecker Installation Requirements

Requirements for executing CPAchecker:
0. Sources have to be preprocessed by CIL
   (http://hal.cs.berkeley.edu/cil/, mirror at http://www.cs.berkeley.edu/~necula/cil/).
   Necessary flags:
   --dosimplify --printCilAsIs --save-temps --domakeCFG
   Possibly necessary flags:
   --dosimpleMem
   Comments:
   --save-temps saves files to the current directory, a different directory can
   be specified by using --save-temps=<DIRECTORY>

Building CPAchecker:
--------------------
1. Install Java 1.6 SDK or higher (OpenJDK 6 works, too).
   http://java.sun.com/
2. Checkout CPAchecker from SVN repository.
   URL: http://svn.sosy-lab.org/software/cpachecker/trunk
3. Install ant (anything since version 1.6 should be ok).
   The optional ant tasks are needed (in Ubuntu they are packaged as ant-optional).
4. Run "ant" in CPAchecker directory to build CPAchecker.

Running CPAchecker:
-------------------
5. Choose a configuration file and a source code file
   Example: test/config/explicitAnalysisInf.properties
            test/programs/simple/loop1.c
   Check that the configuration file does not contain any non-existent paths
6. Execute "scripts/cpa.sh -config <CONFIG_FILE> <SOURCE_FILE>"

Running test cases:
-------------------
7. You need ant-junit.jar (on Debian/Ubuntu included in the package ant-optional).
8. Run "ant tests" from the project root directory. The output (including the test
   results) will be in test/output/.

Building and running CPAchecker from within Eclipse:
----------------------------------------------------
1. Install Eclipse 3.5 or 3.6 with JDT.
   http://www.eclipse.org/
2. You need an SVN plugin for Eclipse, e.g. SubClipse (http://subclipse.tigris.org/).
   Create new project from SVN repository
   URL: http://svn.sosy-lab.org/software/cpachecker/trunk
3. Ignore warnings "Unsatisfied version constraint: 'org.eclipse.cdt.core ...'"
   and "Bundle 'org.eclipse.cdt.core' cannot be resolved'".
4. Create a run configuration with main class "org.sosy_lab.cpachecker.cmdline.CPAMain",
   program arguments "-config <CONFIG_FILE> <SOURCE_FILE>", and
   VM arguments "-Djava.library.path=lib/native/<ENVIRONMENT>"
   specifying your environment for the library path.
   Settings for <ENVIRONMENT>:
   		ppc-macosx, x86_64-linux, x86-linux, x86-macosx,  x86-win32

Using CPAchecker as an Eclipse plugin for your C projects
---------------------------------------------------------
1. Add the URL http://www.sosy-lab.org/~dbeyer/eclipse-download/ as an update site to Eclipse.
2. Install CPAclipse plugin.

Using CPAchecker as an Eclipse plugin for your C projects (for CPAchecker developers)
-------------------------------------------------------------------------------------
1. You need Eclipse 3.5 with CDT 6 and the Eclipse Plugin Development Environment.
   (Eclipse 3.6 is currently not supported). Also install an SVN plugin.
2. Create an Eclipse project for CPAchecker as described above.
3. Create an Eclipse project for CPAclipse from the SVN repository
   URL: http://svn.sosy-lab.org/software/cpachecker/trunk/plugin/CPAclipse
4. If there are warnings about missing bundles, you don't have CDT in the correct version.
5. Run the CPAclipse project as an "Eclipse Application".


Troubleshooting:
----------------
- Libraries are missing.
  Error (example): "libgmpxx.so.4: cannot open shared object file: No such file or directory"
  Solution: Install the missing library ('libgmpxx4ldbl' in this case on debian/ubuntu systems)


Sources of binaries provided with the distribution/SVN:
NOTE: If you add a library to CPAchecker, be sure to update MANIFEST.MF
and build.properties with the Eclipse PDE wizard!
- libJOct.so: Use steps similar to compileOctLib.sh after downloading and
  installing the octagon library (http://www.di.ens.fr/~mine/oct/ merged into
  APRON with different interfaces)
- javabdd-1.0b2.jar, libcudd.so: See
  http://javabdd.sourceforge.net/compiling.html
- mathsat.jar: Source code provided with the archive
- CSIsat: http://www.sosy-lab.org/~dbeyer/CSIsat/
- Yices Java Lite API:
  http://atlantis.seidenberg.pace.edu/wiki/lep/Yices%20Java%20API%20Lite
- java-cup-11a.jar: http://www2.cs.tum.edu/projects/cup/
- icu4j-4_2_1.jar: http://site.icu-project.org/
- JFlex.jar: http://jflex.de/
- Guava (Google Core Libraries for Java):
  http://guava-libraries.googlecode.com
  Apache License 2.0
- JGraphT: http://www.jgrapht.org/
- Eclipse and Eclipse CDT: http://www.eclipse.org/ and http://www.eclipse.org/cdt/
- JUnit: http://junit.sourceforge.net/

Examples of working installation:
db 2008-11-28:
0. x86 32bit
1. Java 1.6.0_10
2. Eclipse 3.4.1 (Ganymede)
3. CDT 4.0.3

pwendler 2009-08-25:
0. x86 32bit Linux
1. Sun Java 1.6.0_14
2. Eclipse 3.5.0 (Galileo)
4. CDT 6.0.0

pwendler 2010-10-01
0. x64 Linux
1. OpenJDK 1.6.0_18
2. Eclipse 3.6.0 (Helios)
4. no CDT
