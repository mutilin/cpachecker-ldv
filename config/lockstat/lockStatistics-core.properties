# The configuration is used as a core configuration for lock analysis,
# extended Linux specific properties are located in lockStatistics-linux.properties

cpa = cpa.bam.BAMCPA
BAMCPA.cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.usage.UsageCPA
UsageCPA.cpa = cpa.composite.CompositeCPA
# CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.lock.LockCPA, cpa.predicate.BAMPredicateCPA, cpa.functionpointer.FunctionPointerCPA
CompositeCPA.cpas = cpa.thread.ThreadCPA, cpa.lock.LockCPA, cpa.predicate.BAMPredicateCPA, cpa.functionpointer.FunctionPointerCPA

# reverse postorder (a more restrictive topological ordering) is better than dfs if elements may be merged
analysis.traversal.order = bfs
analysis.traversal.useReversePostorder = true
analysis.traversal.useCallstack = true
analysis.functionPointerCalls = true
analysis.matchAssignedFunctionPointers = true
precision.path = localsave
analysis.entryFunction = entry_point
analysis.algorithm.CEGAR = true
cpa.callstack.skipRecursion = true
cpa.bam.useExtendedPartitioningBuilder = true

cegar.refiner = cpa.usage.UsageRefiner
cpa.usage.refinementChain = IdentifierIterator, PointIterator, UsageIterator, PathIterator, PredicateRefiner, ProbeFilter
cpa.usage.totalARGCleaning = true
# cegar.refinementLoops = 0

# disable output
cpa.arg.export = false
counterexample.export.enabled = false
cfa.export = false
cpa.bam.exportARGs = false
output.disable = true
coverage.output = coverage.info

analysis.reachedSet = USAGESTATISTICS
cpa.usage.outputType = KLEVER
cpa.usage.printFalseUnsafes = false
cpa.usage.printOnlyTrueUnsafes = false

cpa.usage.output = unsafe_rawdata
cpa.usage.localanalysis = true
cpa.usage.unsafedetector.ignoreEmptyLockset = true

cpa.usage.covering = true

cpa.lockstatistics.reduceUselessLocks = true
#include predicateAnalysis.properties
