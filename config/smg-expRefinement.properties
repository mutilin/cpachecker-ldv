# ----------------------------------------------------------------------
# This configuration file uses a combination of explicit-value analysis
# and symbolic memory graphs to verify memory safety properties.
# ----------------------------------------------------------------------

#include includes/explicitAnalysis.properties

# specification for reachability problems
specification = specification/sv-comp.spc

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.explicit2.ExplicitCPA, cpa.cpalien2.CPAlienCPA, cpa.conditions.global.GlobalConditionsCPA, cpa.assumptions.storage.AssumptionStorageCPA

# checking conterexamples, esp. with CBMC does not make sense
analysis.useCBMC = false

analysis.traversal.order                  = bfs
analysis.traversal.useReversePostorder    = false
analysis.traversal.useCallstack           = false

cpa.cpalien.enableMallocFail       = false
cpa.cpalien.handleUnknownFunctions = assume_safe

# cfa.useMultiEdges = true
cfa.simplifyConstExpressions = true

# use refinment and define the refiner to use
analysis.useRefinement                 = true
cegar.refiner                          = cpa.explicit2.refiner.DelegatingExplicitRefiner

# precision adjustment takes care of computing the abstraction according to the current precision
cpa.composite.precAdjust               = COMPONENT
