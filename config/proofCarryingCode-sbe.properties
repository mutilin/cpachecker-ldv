# set up configuration for ART construction

analysis.useRefinement = true

cegar.refiner = cpa.predicate.PredicateRefiner

# ARTCPA is necessary for refinement and has to be the top-level CPA
cpa = cpa.art.ARTCPA

ARTCPA.cpa = cpa.composite.CompositeCPA

# all three CPA are needed
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.predicate.PredicateCPA

# this automaton defines which locations are the error locations
# only locations with error label, otherwise it cannot be checked during proof checking
specification = config/specification/ErrorLabel.spc

# SBE set up
cpa.predicate.abstraction.cartesian = true
cpa.predicate.blk.threshold = 1

# these settings may be disabled
#cpa.predicate.blk.alwaysAtFunctions = false
#cpa.predicate.blk.alwaysAtLoops = false

#this setting may be enabled
#cpa.predicate.symbolicCoverageCheck = true

# CFA configuration
# only paths to possible error locations are analyzed, may be used
# cfa.removeIrrelevantForErrorLocations = true

# PCC configuration

# enable proof generation/checking
pcc.proofgen.doPCC = true

# specifies the kind of algorithm which should be used
# must be the same for generation and checking
# allowed values are SBENOINDART(default), SBEINDART, 
# SBEINDINVARIANT,  SBENOINDINVARIANT, SBENOEDGENOINDINVARIANT,
# SBENOEDGENOINDINVARIANT2,ABENOINDART, ALBENOINDART,  ALBENOINDINVARIANT 
# (ALBE... require alwaysAtFunctions, alwaysAtLoops, ABE.. requires alwaysAtLoops)
pcc.proofgen.algorithm = SBENOINDART

#specifies the file to which proof is written/from which the proof is read from
# default pccProof.txt
#pcc.proofgen.file = "pccProof.txt"

log.consoleLevel = SEVERE
