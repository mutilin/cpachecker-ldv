# reverse postorder (a more restrictive topological ordering) is better than dfs if elements may be merged
# callstack is necessary for ABE with blocks across function boundaries to work well
analysis.traversal.order = bfs
# analysis.traversal.useReversePostorder = true
analysis.traversal.useCallstack = true

# enable predicated analysis
analysis.predicatedAnalysis =true

# enable refinement
analysis.algorithm.CEGAR = true

cegar.refiner = cpa.predicate.PredicateRefiner
# cpa.predicate.refinement.performInitialStaticRefinement = true

# cpa structure
# ARGCPA is necessary for refinement and has to be the top-level CPA
cpa = cpa.arg.ARGCPA
ARGCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.predicate.PredicateCPA, cpa.interval.IntervalAnalysisCPA

# configuration of predicate analysis
cpa.composite.inPredicatedAnalysis = true
cpa.arg.inPredicatedAnalysis = true
cpa.predicate.blk.alwaysAtJoin = true

# configuration of interval analysis
cpa.interval.merge = JOIN
cpa.interval.ignoreReferenceCounts = true

# specification of property to be checked
cpa.interval.varName = main::x
cpa.interval.allowedLow = 0
# cpa.interval.allowedHigh = 5

# set resource limits
limits.time.cpu = 900s

# log configuration
log.consoleLevel = WARNING

# output configuration
output.disable = true
