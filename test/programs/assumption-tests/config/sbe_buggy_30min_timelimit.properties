# ----------------------------------------------------------------------
# This configuration file uses the Adjustable-Block Encoding CPA
# for predicate abstraction with CEGAR as described in
# "Predicate Abstraction with Adjustable-Block Encoding" (Beyer et.al.).
# It is configured for the Single-Block Encoding (SBE) case
# This CPA is wrapped in another CPA that provides the possibility to
# define limits (e.g. time limits) for specific operations.
# ----------------------------------------------------------------------

# only paths to error locations are analyzed
# REMOVE THIS IF YOU DON'T HAVE "Label: ERROR" IN YOUR PROGRAM!
cfa.removeIrrelevantForErrorLocations = true

analysis.traversal = dfs

analysis.useRefinement = true

cegar.refiner = cpa.predicate.PredicateRefiner

# ARTCPA is necessary for refinement and has to be the top-level CPA
cpa = cpa.art.ARTCPA

ARTCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.assumptions.progressobserver.ProgressObserverCPA, cpa.monitor.MonitorCPA predabsMonitor

predabsMonitor.cpa = cpa.predicate.PredicateCPA

# this automaton defines which locations are the error locations
specification = test/config/automata/ErrorLocationAutomaton.txt

ProgressObserverCPA.cpa.assumptions.progressobserver.heuristics = TimeOutHeuristics
TimeOutHeuristics.threshold = 1800000

cpa.predicate.abstraction.cartesian = true
cpa.predicate.blk.threshold = 1

cfa.export = false
output.disable = true

